import{_ as a,c as e,a0 as r,o as i}from"./chunks/framework.Dz46SkuX.js";const u=JSON.parse('{"title":"快速开始","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"getting-started.md","filePath":"getting-started.md"}'),o={name:"getting-started.md"};function d(l,t,h,n,p,s){return i(),e("div",null,t[0]||(t[0]=[r('<h1 id="getting-started" tabindex="-1">快速开始 <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;快速开始 {#getting-started}&quot;">​</a></h1><h2 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h2><p>Chariot 是绿色软件，无需安装。下载压缩包，解压到目录即可。</p><p>压缩包内共有两个文件：Chariot 和 ChariotKit 。</p><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>Chariot</td><td>运行环境，供生产环境使用，需分发给最终用户；</td></tr><tr><td>ChariotKit</td><td>开发环境，供开发调试使用，增加了调试工具。</td></tr></tbody></table><h2 id="开发与调试" tabindex="-1">开发与调试 <a class="header-anchor" href="#开发与调试" aria-label="Permalink to &quot;开发与调试&quot;">​</a></h2><p>您可以使用自己喜欢的前端开发框架来进行开发，例如 VUE REACT 等。</p><ul><li>了解项目目录的规范</li><li>了解项目的描述文件</li><li>了解 Chariot 中应用项目的启动顺序</li></ul><p>日常开发用 ChariotKit --project project_id 来启动</p><p>开发完成后可以换用 Chariot 测试生成环境</p><p>最后，进行分发。</p><h2 id="分发给最终用户" tabindex="-1">分发给最终用户 <a class="header-anchor" href="#分发给最终用户" aria-label="Permalink to &quot;分发给最终用户&quot;">​</a></h2><p>将 Chariot 可执行文件与应用项目包给最终用户即可。</p><p>一般情况下，最终用户都是普通用户，</p><p>最终用户在命令行 Chariot --project project_id 即可启动应用项目。 当然，正常情况下，最终用户一般都是普通用户，不可能用命令行，为了方便最终用户，那么可以</p><ol><li>双击 Chariot ，在显示的默认应用项目里的已安装项目里面，点击启动；</li><li>写一个启动脚本，双击后启动 Chariot --project project_id ；</li><li>将自己的应用项目改名为 default，Chariot 启动后会自动执行该项目；</li></ol>',16)]))}const g=a(o,[["render",d]]);export{u as __pageData,g as default};
